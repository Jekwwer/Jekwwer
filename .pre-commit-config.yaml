# .pre-commit-config.yaml: Sets up pre-commit hooks to automate code quality checks.
---
# Sets up CI to automatically update pre-commit hooks
ci:
  run_on_all_branches: true
  autofix_commit_msg: 'ci(pre-commit): auto fixes from pre-commit hooks'
  autofix_prs: true
  autoupdate_branch: 'main'
  autoupdate_commit_msg: 'deps(pre-commit): bump pre-commit hooks to latest version'
  autoupdate_schedule: quarterly
  skip:
    - ruff-check # ci can't run local hooks
    - ruff-format # ci can't run local hooks
    - autoupdate # ci can't run local hooks

repos:
  # ── Housekeeping Hooks ─────────────────────────────────────────────────────
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-merge-conflict
        name: 'check:merge-conflicts'
      - id: check-case-conflict
        name: 'check:case-conflicts'
      - id: check-ast
        name: 'check:ast'
      - id: check-shebang-scripts-are-executable
        name: 'check:shebang-permissions'
      - id: check-executables-have-shebangs
        name: 'check:exec-shebang'
      - id: check-symlinks
        name: 'check:symlinks'
      - id: detect-private-key
        name: 'detect:private-keys'
      - id: check-json
        name: 'validate:json'
      - id: check-toml
        name: 'validate:toml'
      - id: check-yaml
        name: 'validate:yaml'
      - id: check-vcs-permalinks
        name: 'validate:vcs-permalinks'
      - id: debug-statements
        name: 'detect:debug-statements'
      - id: end-of-file-fixer
        name: 'fix:newline-eof'
      - id: mixed-line-ending
        name: 'fix:line-endings'
        args: [--fix=lf]
      - id: trailing-whitespace
        name: 'fix:trailing-whitespace'

  # ── Regex-based Hooks ───────────────────────────────────────────────────────
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-eval
        name: 'detect:no-eval'
      - id: python-no-log-warn
        name: 'detect:no-log-warn'
      - id: python-check-blanket-noqa
        name: 'validate:noqa-specific'
      - id: python-check-blanket-type-ignore
        name: 'validate:type-ignore-specific'
      - id: python-check-mock-methods
        name: 'validate:mock-methods'
      - id: text-unicode-replacement-char
        name: 'detect:unicode-replacement-char'

  # ── Markdown Hooks ─────────────────────────────────────────────────────────
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        name: 'lint:markdown'
        args: ['--ignore-path', '.gitignore', '--ignore', 'README.md']

  - repo: https://github.com/tcort/markdown-link-check
    rev: v3.13.7
    hooks:
      - id: markdown-link-check
        name: 'check:md-links'

  # ── YAML Hooks ─────────────────────────────────────────────────────────────
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        name: 'lint:yaml'
        args:
          - '--config-file'
          - '.yamllint.yml'

  # ── Lint & Format Hooks ────────────────────────────────────────────────────
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        name: 'format:pyupgrade'

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.0
    hooks:
      - id: mypy
        name: 'typecheck:mypy'
        additional_dependencies:
          - requests
        args: ['--install-types', '--non-interactive']

  - repo: https://github.com/rbubley/mirrors-prettier
    rev: v3.5.3
    hooks:
      - id: prettier
        name: 'format:prettier'
        args: ['--write', '--config', '.prettierrc']

  # ── Spelling Hooks ─────────────────────────────────────────────────────────
  - repo: https://github.com/streetsidesoftware/cspell-cli
    rev: v9.0.1
    hooks:
      - id: cspell
        name: 'check:spelling'
      - id: cspell
        name: 'check:commit-spelling'
        args:
          - --no-must-find-files
          - --no-progress
          - --no-summary
          - --files
          - .git/COMMIT_EDITMSG
        stages: [commit-msg]
        always_run: true

  # Lint & Format Hooks (local) ───────────────────────────────────────────────
  - repo: local
    hooks:
      - id: ruff-check
        name: 'lint:ruff'
        entry: make lint-fix
        language: system
        files: '\.py$'
        pass_filenames: false

      - id: ruff-format
        name: 'format:ruff'
        entry: make format-fix
        language: system
        files: '\.py$'
        pass_filenames: false

  # ── Autoupdate Hooks (local) ───────────────────────────────────────────────
  - repo: local
    hooks:
      - id: autoupdate
        name: 'update:precommit-hooks'
        entry: poetry run pre-commit autoupdate
        language: system
        pass_filenames: false
