# .pre-commit-config.yaml: Sets up pre-commit hooks to automate code quality checks.
---
# Sets up CI to automatically update pre-commit hooks
ci:
  run_on_all_branches: true
  autofix_commit_msg: 'ci(pre-commit): auto fixes from pre-commit hooks'
  autofix_prs: true
  autoupdate_branch: 'main'
  autoupdate_commit_msg: 'deps(pre-commit): bump pre-commit hooks to latest version'
  autoupdate_schedule: quarterly
  skip:
    - autoupdate # ci can't run local hooks
    - lint # ci can't run local hooks
    - format # ci can't run local hooks
    - bandit # ci can't run local hooks
    - mypy # ci can't run local hooks

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Ensure no unresolved merge conflicts remain.
      - id: check-merge-conflict
        name: 'check:merge-conflicts'

      # Detect files that would conflict on case-insensitive filesystems.
      - id: check-case-conflict
        name: 'check:case-conflicts'

      # Verify file parsability by checking the abstract syntax tree.
      - id: check-ast
        name: 'check:ast'

      # Ensure that files with shebangs have correct execution permissions.
      - id: check-shebang-scripts-are-executable
        name: 'check:shebang-permissions'

      # Verify that executable files have an associated shebang.
      - id: check-executables-have-shebangs
        name: 'check:exec-shebang'

      # Check for broken symlinks.
      - id: check-symlinks
        name: 'check:symlinks'

      # Detect any accidentally committed private keys.
      - id: detect-private-key
        name: 'detect:private-keys'

      # Validate JSON file syntax.
      - id: check-json
        name: 'validate:json'

      # Validate YAML file syntax.
      - id: check-yaml
        name: 'validate:yaml'

      # Ensure files end with a newline.
      - id: end-of-file-fixer
        name: 'fix:newline-eof'

      # Fix mixed line endings (converting to LF by default).
      - id: mixed-line-ending
        name: 'fix:line-endings'
        args: [--fix=lf]

      # Remove any trailing whitespace.
      - id: trailing-whitespace
        name: 'fix:trailing-whitespace'

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0
    hooks:
      # Lint Markdown files.
      - id: markdownlint
        name: 'lint:markdown'
        args: ['--ignore-path', '.gitignore', '--ignore', 'README.md']

  - repo: https://github.com/tcort/markdown-link-check
    rev: v3.13.7
    hooks:
      # Check for broken links in Markdown files.
      - id: markdown-link-check
        name: 'check:md-links'

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.0
    hooks:
      # Lint YAML files.
      - id: yamllint
        name: 'lint:yaml'
        args: ['--config-data', '{extends: default, rules: {line-length: {max: 88}}}']

  - repo: https://github.com/rbubley/mirrors-prettier
    rev: v3.5.3
    hooks:
      # Format code using Prettier.
      - id: prettier
        name: 'format:prettier'
        args: ['--write', '--config', '.prettierrc']

  - repo: https://github.com/streetsidesoftware/cspell-cli
    rev: v8.17.3
    hooks:
      # Check spelling in files.
      - id: cspell
        name: 'check:spelling'
      # Check spelling in commit messages.
      - id: cspell
        name: 'check:commit-spelling'
        args:
          - --no-must-find-files
          - --no-progress
          - --no-summary
          - --files
          - .git/COMMIT_EDITMSG
        stages: [commit-msg]
        always_run: true

  # Local custom hooks using tox environments for Python code
  - repo: local
    hooks:
      - id: lint
        name: 'lint:python'
        entry: tox -e lint
        language: system
        pass_filenames: true
        files: \.py$ # Only trigger for Python files
        args: ['--', '{filenames}']

      - id: format
        name: 'format:python'
        entry: tox -e format
        language: system
        pass_filenames: true
        files: \.py$ # Only trigger for Python files
        args: ['--', '{filenames}']

      - id: bandit
        name: 'check:python-security'
        language: system
        entry: tox -e bandit
        pass_filenames: true
        files: \.py$ # Only trigger for Python files
        args: ['--', '{filenames}']

      - id: mypy
        name: 'check:python-types'
        language: system
        entry: tox -e mypy
        pass_filenames: true
        files: \.py$ # Only trigger for Python files
        args: ['--', '{filenames}']

      # Update pre-commit hooks automatically.
      - id: autoupdate
        name: 'update:precommit-hooks'
        entry: pre-commit autoupdate
        language: system
        pass_filenames: false
